// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  username String
  password String
  Websites UserToWebsite[]
}

model Website{
  id String @id @default(uuid())
  name String
  url String

  users UserToWebsite[]
  status Status[]
  latencyReport Latency[]
}

model UserToWebsite{
  id String @id @default(uuid())
  userId String
  siteId String

  Websites Website @relation(fields: [siteId],references: [id])
  Users User @relation(fields: [userId],references: [id])
}

model Region{
  id String @id @default(uuid())
  name String

  status Status[]
  latencyReports Latency[]
}

model Status{
  id String @default(uuid()) @id
  
  siteId String
  regionId String
  status Boolean @default(false)
  time DateTime @default(now())

  websites Website @relation(fields: [siteId],references: [id])
  regions Region @relation(fields: [regionId],references: [id])
}

model Latency{
  id String @id @default(uuid())
  siteId String
  regionId String
  latency Int @default(999)
  time DateTime @default(now())

  websites Website @relation(fields: [siteId],references: [id])
  regions Region @relation(fields: [regionId],references: [id])
}
